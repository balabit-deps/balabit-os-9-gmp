From 3de10ba667f6cbdd6e184925f58b96c4ca6ddb18 Mon Sep 17 00:00:00 2001
From: "H.J. Lu" <hjl.tools@gmail.com>
Date: Tue, 28 Jan 2020 15:41:00 -0800
Subject: [PATCH 06/13] x86_64: Append ASM_END to assembly codes

Append ASM_END to x86_64 assembly codes to generate .note.gnu.property
section when Intel CET is enabled.

	* mpn/x86_64/addaddmul_1msb0.asm: Append ASM_END.
	* mpn/x86_64/aorrlsh1_n.asm: Likewise.
	* mpn/x86_64/aorrlshC_n.asm: Likewise.
	* mpn/x86_64/aorrlsh_n.asm: Likewise.
	* mpn/x86_64/aors_err1_n.asm: Likewise.
	* mpn/x86_64/aors_err2_n.asm: Likewise.
	* mpn/x86_64/aors_err3_n.asm: Likewise.
	* mpn/x86_64/aors_n.asm: Likewise.
	* mpn/x86_64/aorsmul_1.asm: Likewise.
	* mpn/x86_64/atom/addmul_2.asm: Likewise.
	* mpn/x86_64/atom/aorrlsh1_n.asm: Likewise.
	* mpn/x86_64/atom/aorrlsh2_n.asm: Likewise.
	* mpn/x86_64/atom/lshift.asm: Likewise.
	* mpn/x86_64/atom/lshiftc.asm: Likewise.
	* mpn/x86_64/atom/mul_2.asm: Likewise.
	* mpn/x86_64/atom/rsh1aors_n.asm: Likewise.
	* mpn/x86_64/atom/rshift.asm: Likewise.
	* mpn/x86_64/atom/sublsh1_n.asm: Likewise.
	* mpn/x86_64/bd1/addmul_2.asm: Likewise.
	* mpn/x86_64/bd1/hamdist.asm: Likewise.
	* mpn/x86_64/bd1/mul_2.asm: Likewise.
	* mpn/x86_64/bd1/mul_basecase.asm: Likewise.
	* mpn/x86_64/bd1/popcount.asm: Likewise.
	* mpn/x86_64/bd2/gcd_11.asm: Likewise.
	* mpn/x86_64/bd2/gcd_22.asm: Likewise.
	* mpn/x86_64/bd4/gcd_11.asm: Likewise.
	* mpn/x86_64/bdiv_dbm1c.asm: Likewise.
	* mpn/x86_64/bdiv_q_1.asm: Likewise.
	* mpn/x86_64/bt1/aors_n.asm: Likewise.
	* mpn/x86_64/bt1/aorsmul_1.asm: Likewise.
	* mpn/x86_64/bt1/copyd.asm: Likewise.
	* mpn/x86_64/bt1/copyi.asm: Likewise.
	* mpn/x86_64/bt1/gcd_11.asm: Likewise.
	* mpn/x86_64/bt1/mul_1.asm: Likewise.
	* mpn/x86_64/bt1/mul_basecase.asm: Likewise.
	* mpn/x86_64/bt1/sqr_basecase.asm: Likewise.
	* mpn/x86_64/cnd_aors_n.asm: Likewise.
	* mpn/x86_64/com.asm: Likewise.
	* mpn/x86_64/copyd.asm: Likewise.
	* mpn/x86_64/copyi.asm: Likewise.
	* mpn/x86_64/core2/aors_err1_n.asm: Likewise.
	* mpn/x86_64/core2/aors_n.asm: Likewise.
	* mpn/x86_64/core2/aorsmul_1.asm: Likewise.
	* mpn/x86_64/core2/divrem_1.asm: Likewise.
	* mpn/x86_64/core2/gcd_11.asm: Likewise.
	* mpn/x86_64/core2/gcd_22.asm: Likewise.
	* mpn/x86_64/core2/hamdist.asm: Likewise.
	* mpn/x86_64/core2/logops_n.asm: Likewise.
	* mpn/x86_64/core2/lshift.asm: Likewise.
	* mpn/x86_64/core2/lshiftc.asm: Likewise.
	* mpn/x86_64/core2/mul_basecase.asm: Likewise.
	* mpn/x86_64/core2/mullo_basecase.asm: Likewise.
	* mpn/x86_64/core2/popcount.asm: Likewise.
	* mpn/x86_64/core2/rsh1aors_n.asm: Likewise.
	* mpn/x86_64/core2/rshift.asm: Likewise.
	* mpn/x86_64/core2/sqr_basecase.asm: Likewise.
	* mpn/x86_64/core2/sublshC_n.asm: Likewise.
	* mpn/x86_64/coreibwl/mul_basecase.asm: Likewise.
	* mpn/x86_64/coreibwl/mullo_basecase.asm: Likewise.
	* mpn/x86_64/coreibwl/sqr_basecase.asm: Likewise.
	* mpn/x86_64/coreihwl/addmul_2.asm: Likewise.
	* mpn/x86_64/coreihwl/aors_n.asm: Likewise.
	* mpn/x86_64/coreihwl/aorsmul_1.asm: Likewise.
	* mpn/x86_64/coreihwl/gcd_22.asm: Likewise.
	* mpn/x86_64/coreihwl/mul_2.asm: Likewise.
	* mpn/x86_64/coreihwl/mul_basecase.asm: Likewise.
	* mpn/x86_64/coreihwl/mullo_basecase.asm: Likewise.
	* mpn/x86_64/coreihwl/redc_1.asm: Likewise.
	* mpn/x86_64/coreihwl/sqr_basecase.asm: Likewise.
	* mpn/x86_64/coreinhm/aorrlsh_n.asm: Likewise.
	* mpn/x86_64/coreinhm/hamdist.asm: Likewise.
	* mpn/x86_64/coreinhm/popcount.asm: Likewise.
	* mpn/x86_64/coreisbr/addmul_2.asm: Likewise.
	* mpn/x86_64/coreisbr/aorrlshC_n.asm: Likewise.
	* mpn/x86_64/coreisbr/aorrlsh_n.asm: Likewise.
	* mpn/x86_64/coreisbr/aors_n.asm: Likewise.
	* mpn/x86_64/coreisbr/cnd_add_n.asm: Likewise.
	* mpn/x86_64/coreisbr/cnd_sub_n.asm: Likewise.
	* mpn/x86_64/coreisbr/mul_1.asm: Likewise.
	* mpn/x86_64/coreisbr/mul_2.asm: Likewise.
	* mpn/x86_64/coreisbr/mul_basecase.asm: Likewise.
	* mpn/x86_64/coreisbr/mullo_basecase.asm: Likewise.
	* mpn/x86_64/coreisbr/rsh1aors_n.asm: Likewise.
	* mpn/x86_64/coreisbr/sqr_basecase.asm: Likewise.
	* mpn/x86_64/div_qr_1n_pi1.asm: Likewise.
	* mpn/x86_64/div_qr_2n_pi1.asm: Likewise.
	* mpn/x86_64/div_qr_2u_pi1.asm: Likewise.
	* mpn/x86_64/dive_1.asm: Likewise.
	* mpn/x86_64/divrem_1.asm: Likewise.
	* mpn/x86_64/divrem_2.asm: Likewise.
	* mpn/x86_64/fastavx/copyd.asm: Likewise.
	* mpn/x86_64/fastavx/copyi.asm: Likewise.
	* mpn/x86_64/fastsse/com-palignr.asm: Likewise.
	* mpn/x86_64/fastsse/com.asm: Likewise.
	* mpn/x86_64/fastsse/copyd-palignr.asm: Likewise.
	* mpn/x86_64/fastsse/copyd.asm: Likewise.
	* mpn/x86_64/fastsse/copyi-palignr.asm: Likewise.
	* mpn/x86_64/fastsse/copyi.asm: Likewise.
	* mpn/x86_64/fastsse/lshift-movdqu2.asm: Likewise.
	* mpn/x86_64/fastsse/lshift.asm: Likewise.
	* mpn/x86_64/fastsse/lshiftc-movdqu2.asm: Likewise.
	* mpn/x86_64/fastsse/lshiftc.asm: Likewise.
	* mpn/x86_64/fastsse/rshift-movdqu2.asm: Likewise.
	* mpn/x86_64/fastsse/sec_tabselect.asm: Likewise.
	* mpn/x86_64/fat/fat_entry.asm: Likewise.
	* mpn/x86_64/gcd_11.asm: Likewise.
	* mpn/x86_64/gcd_22.asm: Likewise.
	* mpn/x86_64/k10/gcd_22.asm: Likewise.
	* mpn/x86_64/k10/hamdist.asm: Likewise.
	* mpn/x86_64/k10/popcount.asm: Likewise.
	* mpn/x86_64/k8/addmul_2.asm: Likewise.
	* mpn/x86_64/k8/aorrlsh_n.asm: Likewise.
	* mpn/x86_64/k8/bdiv_q_1.asm: Likewise.
	* mpn/x86_64/k8/div_qr_1n_pi1.asm: Likewise.
	* mpn/x86_64/k8/mul_basecase.asm: Likewise.
	* mpn/x86_64/k8/mullo_basecase.asm: Likewise.
	* mpn/x86_64/k8/mulmid_basecase.asm: Likewise.
	* mpn/x86_64/k8/redc_1.asm: Likewise.
	* mpn/x86_64/k8/sqr_basecase.asm: Likewise.
	* mpn/x86_64/logops_n.asm: Likewise.
	* mpn/x86_64/lshift.asm: Likewise.
	* mpn/x86_64/lshiftc.asm: Likewise.
	* mpn/x86_64/lshsub_n.asm: Likewise.
	* mpn/x86_64/missing.asm: Likewise.
	* mpn/x86_64/mod_1_2.asm: Likewise.
	* mpn/x86_64/mod_1_4.asm: Likewise.
	* mpn/x86_64/mod_34lsub1.asm: Likewise.
	* mpn/x86_64/mode1o.asm: Likewise.
	* mpn/x86_64/mul_1.asm: Likewise.
	* mpn/x86_64/mul_2.asm: Likewise.
	* mpn/x86_64/nano/dive_1.asm: Likewise.
	* mpn/x86_64/pentium4/aors_n.asm: Likewise.
	* mpn/x86_64/pentium4/mod_34lsub1.asm: Likewise.
	* mpn/x86_64/pentium4/rsh1aors_n.asm: Likewise.
	* mpn/x86_64/pentium4/rshift.asm: Likewise.
	* mpn/x86_64/popham.asm: Likewise.
	* mpn/x86_64/rsh1aors_n.asm: Likewise.
	* mpn/x86_64/rshift.asm: Likewise.
	* mpn/x86_64/sec_tabselect.asm: Likewise.
	* mpn/x86_64/sqr_diag_addlsh1.asm: Likewise.
	* mpn/x86_64/sublsh1_n.asm: Likewise.
	* mpn/x86_64/zen/aorrlsh_n.asm: Likewise.
	* mpn/x86_64/zen/mul_basecase.asm: Likewise.
	* mpn/x86_64/zen/mullo_basecase.asm: Likewise.
	* mpn/x86_64/zen/sbpi1_bdiv_r.asm: Likewise.
	* mpn/x86_64/zen/sqr_basecase.asm: Likewise.
---
 mpn/x86_64/addaddmul_1msb0.asm         | 1 +
 mpn/x86_64/aorrlsh1_n.asm              | 1 +
 mpn/x86_64/aorrlshC_n.asm              | 1 +
 mpn/x86_64/aorrlsh_n.asm               | 1 +
 mpn/x86_64/aors_err1_n.asm             | 1 +
 mpn/x86_64/aors_err2_n.asm             | 1 +
 mpn/x86_64/aors_err3_n.asm             | 1 +
 mpn/x86_64/aors_n.asm                  | 1 +
 mpn/x86_64/aorsmul_1.asm               | 1 +
 mpn/x86_64/atom/addmul_2.asm           | 1 +
 mpn/x86_64/atom/aorrlsh1_n.asm         | 1 +
 mpn/x86_64/atom/aorrlsh2_n.asm         | 1 +
 mpn/x86_64/atom/lshift.asm             | 1 +
 mpn/x86_64/atom/lshiftc.asm            | 1 +
 mpn/x86_64/atom/mul_2.asm              | 1 +
 mpn/x86_64/atom/rsh1aors_n.asm         | 1 +
 mpn/x86_64/atom/rshift.asm             | 1 +
 mpn/x86_64/atom/sublsh1_n.asm          | 1 +
 mpn/x86_64/bd1/addmul_2.asm            | 1 +
 mpn/x86_64/bd1/hamdist.asm             | 1 +
 mpn/x86_64/bd1/mul_2.asm               | 1 +
 mpn/x86_64/bd1/mul_basecase.asm        | 1 +
 mpn/x86_64/bd1/popcount.asm            | 1 +
 mpn/x86_64/bd2/gcd_11.asm              | 1 +
 mpn/x86_64/bd2/gcd_22.asm              | 1 +
 mpn/x86_64/bd4/gcd_11.asm              | 1 +
 mpn/x86_64/bdiv_dbm1c.asm              | 1 +
 mpn/x86_64/bdiv_q_1.asm                | 1 +
 mpn/x86_64/bt1/aors_n.asm              | 1 +
 mpn/x86_64/bt1/aorsmul_1.asm           | 1 +
 mpn/x86_64/bt1/copyd.asm               | 1 +
 mpn/x86_64/bt1/copyi.asm               | 1 +
 mpn/x86_64/bt1/gcd_11.asm              | 1 +
 mpn/x86_64/bt1/mul_1.asm               | 1 +
 mpn/x86_64/bt1/mul_basecase.asm        | 1 +
 mpn/x86_64/bt1/sqr_basecase.asm        | 1 +
 mpn/x86_64/cnd_aors_n.asm              | 1 +
 mpn/x86_64/com.asm                     | 1 +
 mpn/x86_64/copyd.asm                   | 1 +
 mpn/x86_64/copyi.asm                   | 1 +
 mpn/x86_64/core2/aors_err1_n.asm       | 1 +
 mpn/x86_64/core2/aors_n.asm            | 1 +
 mpn/x86_64/core2/aorsmul_1.asm         | 1 +
 mpn/x86_64/core2/divrem_1.asm          | 1 +
 mpn/x86_64/core2/gcd_11.asm            | 1 +
 mpn/x86_64/core2/gcd_22.asm            | 1 +
 mpn/x86_64/core2/hamdist.asm           | 1 +
 mpn/x86_64/core2/logops_n.asm          | 1 +
 mpn/x86_64/core2/lshift.asm            | 1 +
 mpn/x86_64/core2/lshiftc.asm           | 1 +
 mpn/x86_64/core2/mul_basecase.asm      | 1 +
 mpn/x86_64/core2/mullo_basecase.asm    | 1 +
 mpn/x86_64/core2/popcount.asm          | 1 +
 mpn/x86_64/core2/rsh1aors_n.asm        | 1 +
 mpn/x86_64/core2/rshift.asm            | 1 +
 mpn/x86_64/core2/sqr_basecase.asm      | 1 +
 mpn/x86_64/core2/sublshC_n.asm         | 1 +
 mpn/x86_64/coreibwl/mul_basecase.asm   | 1 +
 mpn/x86_64/coreibwl/mullo_basecase.asm | 1 +
 mpn/x86_64/coreibwl/sqr_basecase.asm   | 1 +
 mpn/x86_64/coreihwl/addmul_2.asm       | 1 +
 mpn/x86_64/coreihwl/aors_n.asm         | 1 +
 mpn/x86_64/coreihwl/aorsmul_1.asm      | 1 +
 mpn/x86_64/coreihwl/gcd_22.asm         | 1 +
 mpn/x86_64/coreihwl/mul_2.asm          | 1 +
 mpn/x86_64/coreihwl/mul_basecase.asm   | 1 +
 mpn/x86_64/coreihwl/mullo_basecase.asm | 1 +
 mpn/x86_64/coreihwl/redc_1.asm         | 1 +
 mpn/x86_64/coreihwl/sqr_basecase.asm   | 1 +
 mpn/x86_64/coreinhm/aorrlsh_n.asm      | 1 +
 mpn/x86_64/coreinhm/hamdist.asm        | 1 +
 mpn/x86_64/coreinhm/popcount.asm       | 1 +
 mpn/x86_64/coreisbr/addmul_2.asm       | 1 +
 mpn/x86_64/coreisbr/aorrlshC_n.asm     | 1 +
 mpn/x86_64/coreisbr/aorrlsh_n.asm      | 1 +
 mpn/x86_64/coreisbr/aors_n.asm         | 1 +
 mpn/x86_64/coreisbr/cnd_add_n.asm      | 1 +
 mpn/x86_64/coreisbr/cnd_sub_n.asm      | 1 +
 mpn/x86_64/coreisbr/mul_1.asm          | 1 +
 mpn/x86_64/coreisbr/mul_2.asm          | 1 +
 mpn/x86_64/coreisbr/mul_basecase.asm   | 1 +
 mpn/x86_64/coreisbr/mullo_basecase.asm | 1 +
 mpn/x86_64/coreisbr/rsh1aors_n.asm     | 1 +
 mpn/x86_64/coreisbr/sqr_basecase.asm   | 1 +
 mpn/x86_64/div_qr_1n_pi1.asm           | 1 +
 mpn/x86_64/div_qr_2n_pi1.asm           | 1 +
 mpn/x86_64/div_qr_2u_pi1.asm           | 1 +
 mpn/x86_64/dive_1.asm                  | 1 +
 mpn/x86_64/divrem_1.asm                | 1 +
 mpn/x86_64/divrem_2.asm                | 1 +
 mpn/x86_64/fastavx/copyd.asm           | 1 +
 mpn/x86_64/fastavx/copyi.asm           | 1 +
 mpn/x86_64/fastsse/com-palignr.asm     | 1 +
 mpn/x86_64/fastsse/com.asm             | 1 +
 mpn/x86_64/fastsse/copyd-palignr.asm   | 1 +
 mpn/x86_64/fastsse/copyd.asm           | 1 +
 mpn/x86_64/fastsse/copyi-palignr.asm   | 1 +
 mpn/x86_64/fastsse/copyi.asm           | 1 +
 mpn/x86_64/fastsse/lshift-movdqu2.asm  | 1 +
 mpn/x86_64/fastsse/lshift.asm          | 1 +
 mpn/x86_64/fastsse/lshiftc-movdqu2.asm | 1 +
 mpn/x86_64/fastsse/lshiftc.asm         | 1 +
 mpn/x86_64/fastsse/rshift-movdqu2.asm  | 1 +
 mpn/x86_64/fastsse/sec_tabselect.asm   | 1 +
 mpn/x86_64/fat/fat_entry.asm           | 1 +
 mpn/x86_64/gcd_11.asm                  | 1 +
 mpn/x86_64/gcd_22.asm                  | 1 +
 mpn/x86_64/k10/gcd_22.asm              | 1 +
 mpn/x86_64/k10/hamdist.asm             | 1 +
 mpn/x86_64/k10/popcount.asm            | 1 +
 mpn/x86_64/k8/addmul_2.asm             | 1 +
 mpn/x86_64/k8/aorrlsh_n.asm            | 1 +
 mpn/x86_64/k8/bdiv_q_1.asm             | 1 +
 mpn/x86_64/k8/div_qr_1n_pi1.asm        | 1 +
 mpn/x86_64/k8/mul_basecase.asm         | 1 +
 mpn/x86_64/k8/mullo_basecase.asm       | 1 +
 mpn/x86_64/k8/mulmid_basecase.asm      | 1 +
 mpn/x86_64/k8/redc_1.asm               | 1 +
 mpn/x86_64/k8/sqr_basecase.asm         | 1 +
 mpn/x86_64/logops_n.asm                | 1 +
 mpn/x86_64/lshift.asm                  | 1 +
 mpn/x86_64/lshiftc.asm                 | 1 +
 mpn/x86_64/lshsub_n.asm                | 1 +
 mpn/x86_64/missing.asm                 | 1 +
 mpn/x86_64/mod_1_2.asm                 | 1 +
 mpn/x86_64/mod_1_4.asm                 | 1 +
 mpn/x86_64/mod_34lsub1.asm             | 1 +
 mpn/x86_64/mode1o.asm                  | 1 +
 mpn/x86_64/mul_1.asm                   | 1 +
 mpn/x86_64/mul_2.asm                   | 1 +
 mpn/x86_64/nano/dive_1.asm             | 1 +
 mpn/x86_64/pentium4/aors_n.asm         | 1 +
 mpn/x86_64/pentium4/mod_34lsub1.asm    | 1 +
 mpn/x86_64/pentium4/rsh1aors_n.asm     | 1 +
 mpn/x86_64/pentium4/rshift.asm         | 1 +
 mpn/x86_64/popham.asm                  | 1 +
 mpn/x86_64/rsh1aors_n.asm              | 1 +
 mpn/x86_64/rshift.asm                  | 1 +
 mpn/x86_64/sec_tabselect.asm           | 1 +
 mpn/x86_64/sqr_diag_addlsh1.asm        | 1 +
 mpn/x86_64/sublsh1_n.asm               | 1 +
 mpn/x86_64/zen/aorrlsh_n.asm           | 1 +
 mpn/x86_64/zen/mul_basecase.asm        | 1 +
 mpn/x86_64/zen/mullo_basecase.asm      | 1 +
 mpn/x86_64/zen/sbpi1_bdiv_r.asm        | 1 +
 mpn/x86_64/zen/sqr_basecase.asm        | 1 +
 146 files changed, 146 insertions(+)

diff --git a/mpn/x86_64/addaddmul_1msb0.asm b/mpn/x86_64/addaddmul_1msb0.asm
index 87c21b4ac..2d03ddb9b 100644
--- a/mpn/x86_64/addaddmul_1msb0.asm
+++ b/mpn/x86_64/addaddmul_1msb0.asm
@@ -168,3 +168,4 @@ L(end):	cmp	$1, R32(n)
 	pop	%r12
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/aorrlsh1_n.asm b/mpn/x86_64/aorrlsh1_n.asm
index 6ee087282..1441a6caf 100644
--- a/mpn/x86_64/aorrlsh1_n.asm
+++ b/mpn/x86_64/aorrlsh1_n.asm
@@ -168,3 +168,4 @@ ifdef(`OPERATION_rsblsh1_n',`
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/aorrlshC_n.asm b/mpn/x86_64/aorrlshC_n.asm
index de00154a1..691abde88 100644
--- a/mpn/x86_64/aorrlshC_n.asm
+++ b/mpn/x86_64/aorrlshC_n.asm
@@ -170,3 +170,4 @@ ifelse(ADDSUB,add,`
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/aorrlsh_n.asm b/mpn/x86_64/aorrlsh_n.asm
index 5ca128fbf..57f0e77d3 100644
--- a/mpn/x86_64/aorrlsh_n.asm
+++ b/mpn/x86_64/aorrlsh_n.asm
@@ -174,3 +174,4 @@ L(end):	add	R32(%rbx), R32(%rbx)
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/aors_err1_n.asm b/mpn/x86_64/aors_err1_n.asm
index 54d0b3f9b..8c42ea197 100644
--- a/mpn/x86_64/aors_err1_n.asm
+++ b/mpn/x86_64/aors_err1_n.asm
@@ -223,3 +223,4 @@ L(end):
 	pop	%rbx
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/aors_err2_n.asm b/mpn/x86_64/aors_err2_n.asm
index ce5c2a49b..0227e5db5 100644
--- a/mpn/x86_64/aors_err2_n.asm
+++ b/mpn/x86_64/aors_err2_n.asm
@@ -170,3 +170,4 @@ L(end):
 	pop	%rbx
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/aors_err3_n.asm b/mpn/x86_64/aors_err3_n.asm
index bb6d0c536..37047db1f 100644
--- a/mpn/x86_64/aors_err3_n.asm
+++ b/mpn/x86_64/aors_err3_n.asm
@@ -154,3 +154,4 @@ L(end):
 	pop	%rbx
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/aors_n.asm b/mpn/x86_64/aors_n.asm
index d5a314ac5..b516c4d92 100644
--- a/mpn/x86_64/aors_n.asm
+++ b/mpn/x86_64/aors_n.asm
@@ -176,3 +176,4 @@ L(end):	lea	32(up), up
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/aorsmul_1.asm b/mpn/x86_64/aorsmul_1.asm
index dfe4dc43d..e3bb2f947 100644
--- a/mpn/x86_64/aorsmul_1.asm
+++ b/mpn/x86_64/aorsmul_1.asm
@@ -188,3 +188,4 @@ IFDOS(``pop	%rdi		'')
 IFDOS(``pop	%rsi		'')
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/atom/addmul_2.asm b/mpn/x86_64/atom/addmul_2.asm
index c1dcdc44a..c1d945189 100644
--- a/mpn/x86_64/atom/addmul_2.asm
+++ b/mpn/x86_64/atom/addmul_2.asm
@@ -184,3 +184,4 @@ L(end):	mul	v1
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/atom/aorrlsh1_n.asm b/mpn/x86_64/atom/aorrlsh1_n.asm
index f44de19fe..693a302b8 100644
--- a/mpn/x86_64/atom/aorrlsh1_n.asm
+++ b/mpn/x86_64/atom/aorrlsh1_n.asm
@@ -236,3 +236,4 @@ IFDOS(`	mov	56(%rsp), %r8	')
 	sbb	R32(%rbp), R32(%rbp)	C save acy
 	jmp	L(ent)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/atom/aorrlsh2_n.asm b/mpn/x86_64/atom/aorrlsh2_n.asm
index 02fb29dd7..c6ded740a 100644
--- a/mpn/x86_64/atom/aorrlsh2_n.asm
+++ b/mpn/x86_64/atom/aorrlsh2_n.asm
@@ -189,3 +189,4 @@ ifdef(`OPERATION_rsblsh2_n',`
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/atom/lshift.asm b/mpn/x86_64/atom/lshift.asm
index 1b37d5dcc..894b912cf 100644
--- a/mpn/x86_64/atom/lshift.asm
+++ b/mpn/x86_64/atom/lshift.asm
@@ -121,3 +121,4 @@ L(end):	shl	R8(%rcx), %r10
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/atom/lshiftc.asm b/mpn/x86_64/atom/lshiftc.asm
index 7385f8fd4..40d8fff05 100644
--- a/mpn/x86_64/atom/lshiftc.asm
+++ b/mpn/x86_64/atom/lshiftc.asm
@@ -125,3 +125,4 @@ L(end):	shl	R8(%rcx), %r10
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/atom/mul_2.asm b/mpn/x86_64/atom/mul_2.asm
index 4bc22cd39..87414d93f 100644
--- a/mpn/x86_64/atom/mul_2.asm
+++ b/mpn/x86_64/atom/mul_2.asm
@@ -188,3 +188,4 @@ L(end):	mul	v1
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/atom/rsh1aors_n.asm b/mpn/x86_64/atom/rsh1aors_n.asm
index 6f5f6384a..f3952c073 100644
--- a/mpn/x86_64/atom/rsh1aors_n.asm
+++ b/mpn/x86_64/atom/rsh1aors_n.asm
@@ -285,3 +285,4 @@ L(cj1):	pop	%r15
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/atom/rshift.asm b/mpn/x86_64/atom/rshift.asm
index 29c027de4..f4c59e113 100644
--- a/mpn/x86_64/atom/rshift.asm
+++ b/mpn/x86_64/atom/rshift.asm
@@ -119,3 +119,4 @@ L(end):	shr	R8(cnt), %r10
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/atom/sublsh1_n.asm b/mpn/x86_64/atom/sublsh1_n.asm
index 1306acde2..762e1ee85 100644
--- a/mpn/x86_64/atom/sublsh1_n.asm
+++ b/mpn/x86_64/atom/sublsh1_n.asm
@@ -240,3 +240,4 @@ IFDOS(`	mov	56(%rsp), %r8	')
 	sbb	R32(%rbp), R32(%rbp)	C save acy
 	jmp	L(ent)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/bd1/addmul_2.asm b/mpn/x86_64/bd1/addmul_2.asm
index b54e91af1..b1c149b5a 100644
--- a/mpn/x86_64/bd1/addmul_2.asm
+++ b/mpn/x86_64/bd1/addmul_2.asm
@@ -233,3 +233,4 @@ L(end):	mul	v0
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/bd1/hamdist.asm b/mpn/x86_64/bd1/hamdist.asm
index 29e78a324..f93ce4d61 100644
--- a/mpn/x86_64/bd1/hamdist.asm
+++ b/mpn/x86_64/bd1/hamdist.asm
@@ -204,3 +204,4 @@ DEF_OBJECT(L(cnsts),16,`JUMPTABSECT')
 	.byte	0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f
 END_OBJECT(L(cnsts))
 ')
+ASM_END()
diff --git a/mpn/x86_64/bd1/mul_2.asm b/mpn/x86_64/bd1/mul_2.asm
index 85fa7aa33..e910ceeaa 100644
--- a/mpn/x86_64/bd1/mul_2.asm
+++ b/mpn/x86_64/bd1/mul_2.asm
@@ -193,3 +193,4 @@ L(end):	mov	-8(up), %rax
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/bd1/mul_basecase.asm b/mpn/x86_64/bd1/mul_basecase.asm
index e47ba587c..ebae74dc6 100644
--- a/mpn/x86_64/bd1/mul_basecase.asm
+++ b/mpn/x86_64/bd1/mul_basecase.asm
@@ -414,3 +414,4 @@ L(ret2):pop	%rbp
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/bd1/popcount.asm b/mpn/x86_64/bd1/popcount.asm
index 28ce4616c..063c2cc61 100644
--- a/mpn/x86_64/bd1/popcount.asm
+++ b/mpn/x86_64/bd1/popcount.asm
@@ -189,3 +189,4 @@ DEF_OBJECT(L(cnsts),16,`JUMPTABSECT')
 	.byte	0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f
 END_OBJECT(L(cnsts))
 ')
+ASM_END()
diff --git a/mpn/x86_64/bd2/gcd_11.asm b/mpn/x86_64/bd2/gcd_11.asm
index b1670770d..3d1c7880f 100644
--- a/mpn/x86_64/bd2/gcd_11.asm
+++ b/mpn/x86_64/bd2/gcd_11.asm
@@ -94,3 +94,4 @@ L(end):	mov	v0, %rax
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/bd2/gcd_22.asm b/mpn/x86_64/bd2/gcd_22.asm
index a4f30eadd..b88667823 100644
--- a/mpn/x86_64/bd2/gcd_22.asm
+++ b/mpn/x86_64/bd2/gcd_22.asm
@@ -140,3 +140,4 @@ L(end):	C mov	v0, %rax
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/bd4/gcd_11.asm b/mpn/x86_64/bd4/gcd_11.asm
index 4176b85c8..d172e3221 100644
--- a/mpn/x86_64/bd4/gcd_11.asm
+++ b/mpn/x86_64/bd4/gcd_11.asm
@@ -94,3 +94,4 @@ L(end):	C rax = result
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/bdiv_dbm1c.asm b/mpn/x86_64/bdiv_dbm1c.asm
index a53bd52be..c383ee3d2 100644
--- a/mpn/x86_64/bdiv_dbm1c.asm
+++ b/mpn/x86_64/bdiv_dbm1c.asm
@@ -104,3 +104,4 @@ L(lo1):	sub	%rax, %r8
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/bdiv_q_1.asm b/mpn/x86_64/bdiv_q_1.asm
index 85538c9bb..c983c7f27 100644
--- a/mpn/x86_64/bdiv_q_1.asm
+++ b/mpn/x86_64/bdiv_q_1.asm
@@ -193,3 +193,4 @@ L(one):	shr	R8(%rcx), %rax
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/bt1/aors_n.asm b/mpn/x86_64/bt1/aors_n.asm
index 9b6b5c77b..04d81ddfe 100644
--- a/mpn/x86_64/bt1/aors_n.asm
+++ b/mpn/x86_64/bt1/aors_n.asm
@@ -157,3 +157,4 @@ PROLOGUE(func_nc)
 IFDOS(`	mov	56(%rsp), %r8	')
 	jmp	L(ent)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/bt1/aorsmul_1.asm b/mpn/x86_64/bt1/aorsmul_1.asm
index 41e1d8aba..d309321cf 100644
--- a/mpn/x86_64/bt1/aorsmul_1.asm
+++ b/mpn/x86_64/bt1/aorsmul_1.asm
@@ -189,3 +189,4 @@ IFDOS(`	pop	%rdi		')
 IFDOS(`	pop	%rsi		')
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/bt1/copyd.asm b/mpn/x86_64/bt1/copyd.asm
index 877714e90..23fb80b3a 100644
--- a/mpn/x86_64/bt1/copyd.asm
+++ b/mpn/x86_64/bt1/copyd.asm
@@ -89,3 +89,4 @@ L(end):	cmp	$-4, R32(n)
 L(ret):	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/bt1/copyi.asm b/mpn/x86_64/bt1/copyi.asm
index ee0f57865..25718e642 100644
--- a/mpn/x86_64/bt1/copyi.asm
+++ b/mpn/x86_64/bt1/copyi.asm
@@ -92,3 +92,4 @@ L(end):	cmp	$4, R32(n)
 L(ret):	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/bt1/gcd_11.asm b/mpn/x86_64/bt1/gcd_11.asm
index ef5339250..03bc06d4f 100644
--- a/mpn/x86_64/bt1/gcd_11.asm
+++ b/mpn/x86_64/bt1/gcd_11.asm
@@ -117,3 +117,4 @@ L(count_better):
 	bsf	u0, cnt
 	jmp	L(shr)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/bt1/mul_1.asm b/mpn/x86_64/bt1/mul_1.asm
index 4394d6e1f..634cb35a6 100644
--- a/mpn/x86_64/bt1/mul_1.asm
+++ b/mpn/x86_64/bt1/mul_1.asm
@@ -239,3 +239,4 @@ IFDOS(`	pop	%rdi		')
 IFDOS(`	pop	%rsi		')
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/bt1/mul_basecase.asm b/mpn/x86_64/bt1/mul_basecase.asm
index e7d46bfcf..17261909c 100644
--- a/mpn/x86_64/bt1/mul_basecase.asm
+++ b/mpn/x86_64/bt1/mul_basecase.asm
@@ -484,3 +484,4 @@ L(ret):	pop	%r13
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/bt1/sqr_basecase.asm b/mpn/x86_64/bt1/sqr_basecase.asm
index 0e417a1eb..8f665d1db 100644
--- a/mpn/x86_64/bt1/sqr_basecase.asm
+++ b/mpn/x86_64/bt1/sqr_basecase.asm
@@ -563,3 +563,4 @@ L(esd):	add	%rbx, w0
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/cnd_aors_n.asm b/mpn/x86_64/cnd_aors_n.asm
index 13a2ab3be..b720ecbab 100644
--- a/mpn/x86_64/cnd_aors_n.asm
+++ b/mpn/x86_64/cnd_aors_n.asm
@@ -181,3 +181,4 @@ L(end):	neg	R32(%rax)
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/com.asm b/mpn/x86_64/com.asm
index 006acaf64..ec72e1912 100644
--- a/mpn/x86_64/com.asm
+++ b/mpn/x86_64/com.asm
@@ -93,3 +93,4 @@ L(e10):	movq	24(up,n,8), %r9
 L(ret):	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/copyd.asm b/mpn/x86_64/copyd.asm
index a5e6e595e..02ab53f1b 100644
--- a/mpn/x86_64/copyd.asm
+++ b/mpn/x86_64/copyd.asm
@@ -91,3 +91,4 @@ L(end):	shr	R32(n)
 	mov	%r9, -16(rp)
 1:	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/copyi.asm b/mpn/x86_64/copyi.asm
index bafce7a09..8c6dbdcf7 100644
--- a/mpn/x86_64/copyi.asm
+++ b/mpn/x86_64/copyi.asm
@@ -90,3 +90,4 @@ L(end):	shr	R32(n)
 	mov	%r9, 16(rp)
 1:	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/core2/aors_err1_n.asm b/mpn/x86_64/core2/aors_err1_n.asm
index 3f875aefa..c9c6c366f 100644
--- a/mpn/x86_64/core2/aors_err1_n.asm
+++ b/mpn/x86_64/core2/aors_err1_n.asm
@@ -223,3 +223,4 @@ L(end):
 	pop	%rbx
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/core2/aors_n.asm b/mpn/x86_64/core2/aors_n.asm
index f9e003987..7981b7f48 100644
--- a/mpn/x86_64/core2/aors_n.asm
+++ b/mpn/x86_64/core2/aors_n.asm
@@ -148,3 +148,4 @@ PROLOGUE(func_nc)
 IFDOS(`	mov	56(%rsp), %r8	')
 	jmp	L(start)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/core2/aorsmul_1.asm b/mpn/x86_64/core2/aorsmul_1.asm
index a7a5d6e59..b2b067ad3 100644
--- a/mpn/x86_64/core2/aorsmul_1.asm
+++ b/mpn/x86_64/core2/aorsmul_1.asm
@@ -186,3 +186,4 @@ L(n1):	mov	8(rp), %r10
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/core2/divrem_1.asm b/mpn/x86_64/core2/divrem_1.asm
index 1b3f1394e..d41c49441 100644
--- a/mpn/x86_64/core2/divrem_1.asm
+++ b/mpn/x86_64/core2/divrem_1.asm
@@ -241,3 +241,4 @@ L(ret):	pop	%rbx
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/core2/gcd_11.asm b/mpn/x86_64/core2/gcd_11.asm
index b00451f90..b730a5567 100644
--- a/mpn/x86_64/core2/gcd_11.asm
+++ b/mpn/x86_64/core2/gcd_11.asm
@@ -91,3 +91,4 @@ L(end):	C rax = result
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/core2/gcd_22.asm b/mpn/x86_64/core2/gcd_22.asm
index b5aa73ba9..0ccde8a64 100644
--- a/mpn/x86_64/core2/gcd_22.asm
+++ b/mpn/x86_64/core2/gcd_22.asm
@@ -135,3 +135,4 @@ L(end):	C mov	v0, %rax
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/core2/hamdist.asm b/mpn/x86_64/core2/hamdist.asm
index a78753dcf..be451d78c 100644
--- a/mpn/x86_64/core2/hamdist.asm
+++ b/mpn/x86_64/core2/hamdist.asm
@@ -208,3 +208,4 @@ DEF_OBJECT(L(cnsts),16,`JUMPTABSECT')
 	.byte	0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f
 	.byte	0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f
 END_OBJECT(L(cnsts))
+ASM_END()
diff --git a/mpn/x86_64/core2/logops_n.asm b/mpn/x86_64/core2/logops_n.asm
index 5ff174c78..451d556c2 100644
--- a/mpn/x86_64/core2/logops_n.asm
+++ b/mpn/x86_64/core2/logops_n.asm
@@ -283,3 +283,4 @@ L(ret):	FUNC_EXIT()
 	ret
 EPILOGUE()
 ')
+ASM_END()
diff --git a/mpn/x86_64/core2/lshift.asm b/mpn/x86_64/core2/lshift.asm
index 9016a71ff..62053c297 100644
--- a/mpn/x86_64/core2/lshift.asm
+++ b/mpn/x86_64/core2/lshift.asm
@@ -143,3 +143,4 @@ L(1):	shl	R8(cnt), %r9
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/core2/lshiftc.asm b/mpn/x86_64/core2/lshiftc.asm
index c428f13ca..cdd4e11a2 100644
--- a/mpn/x86_64/core2/lshiftc.asm
+++ b/mpn/x86_64/core2/lshiftc.asm
@@ -157,3 +157,4 @@ L(1):	shl	R8(cnt), %r9
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/core2/mul_basecase.asm b/mpn/x86_64/core2/mul_basecase.asm
index d16be852f..8a184330b 100644
--- a/mpn/x86_64/core2/mul_basecase.asm
+++ b/mpn/x86_64/core2/mul_basecase.asm
@@ -973,3 +973,4 @@ L(lo3):	mul	v0
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/core2/mullo_basecase.asm b/mpn/x86_64/core2/mullo_basecase.asm
index 0f03d867f..11814d520 100644
--- a/mpn/x86_64/core2/mullo_basecase.asm
+++ b/mpn/x86_64/core2/mullo_basecase.asm
@@ -425,3 +425,4 @@ L(n3):	mov	(vp_param), %r9
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/core2/popcount.asm b/mpn/x86_64/core2/popcount.asm
index 39d8c5ded..5e03ef3cc 100644
--- a/mpn/x86_64/core2/popcount.asm
+++ b/mpn/x86_64/core2/popcount.asm
@@ -183,3 +183,4 @@ DEF_OBJECT(L(cnsts),16,`JUMPTABSECT')
 	.byte	0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f
 	.byte	0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f
 END_OBJECT(L(cnsts))
+ASM_END()
diff --git a/mpn/x86_64/core2/rsh1aors_n.asm b/mpn/x86_64/core2/rsh1aors_n.asm
index 27eed3712..5b4fe7ea4 100644
--- a/mpn/x86_64/core2/rsh1aors_n.asm
+++ b/mpn/x86_64/core2/rsh1aors_n.asm
@@ -167,3 +167,4 @@ L(end):	shrd	$1, %rbx, %rbp
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/core2/rshift.asm b/mpn/x86_64/core2/rshift.asm
index 7578a5349..86cc804e6 100644
--- a/mpn/x86_64/core2/rshift.asm
+++ b/mpn/x86_64/core2/rshift.asm
@@ -141,3 +141,4 @@ L(1):	shr	R8(cnt), %r9
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/core2/sqr_basecase.asm b/mpn/x86_64/core2/sqr_basecase.asm
index a112c1b52..65286b0fc 100644
--- a/mpn/x86_64/core2/sqr_basecase.asm
+++ b/mpn/x86_64/core2/sqr_basecase.asm
@@ -982,3 +982,4 @@ L(n3):	mov	%rax, %r10
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/core2/sublshC_n.asm b/mpn/x86_64/core2/sublshC_n.asm
index 272700db5..e30562ba8 100644
--- a/mpn/x86_64/core2/sublshC_n.asm
+++ b/mpn/x86_64/core2/sublshC_n.asm
@@ -156,3 +156,4 @@ L(end):	shr	$RSH, %r11
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreibwl/mul_basecase.asm b/mpn/x86_64/coreibwl/mul_basecase.asm
index 42ca976a2..6dd34495b 100644
--- a/mpn/x86_64/coreibwl/mul_basecase.asm
+++ b/mpn/x86_64/coreibwl/mul_basecase.asm
@@ -367,3 +367,4 @@ L(atab):JMPENT(	L(f0), L(atab))
 	JMPENT(	L(f7), L(atab))
 	TEXT
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreibwl/mullo_basecase.asm b/mpn/x86_64/coreibwl/mullo_basecase.asm
index 5cdb20918..b3e435b35 100644
--- a/mpn/x86_64/coreibwl/mullo_basecase.asm
+++ b/mpn/x86_64/coreibwl/mullo_basecase.asm
@@ -393,3 +393,4 @@ L(mtab):JMPENT(	L(mf7), L(mtab))
 	JMPENT(	L(mf4), L(mtab))
 	JMPENT(	L(mf5), L(mtab))
 	JMPENT(	L(mf6), L(mtab))
+ASM_END()
diff --git a/mpn/x86_64/coreibwl/sqr_basecase.asm b/mpn/x86_64/coreibwl/sqr_basecase.asm
index e81b01b34..e4f77597c 100644
--- a/mpn/x86_64/coreibwl/sqr_basecase.asm
+++ b/mpn/x86_64/coreibwl/sqr_basecase.asm
@@ -837,3 +837,4 @@ L(atab):JMPENT(	L(f6), L(atab))
 	JMPENT(	L(f5), L(atab))
 	TEXT
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreihwl/addmul_2.asm b/mpn/x86_64/coreihwl/addmul_2.asm
index 9d1c40534..322037ee9 100644
--- a/mpn/x86_64/coreihwl/addmul_2.asm
+++ b/mpn/x86_64/coreihwl/addmul_2.asm
@@ -239,3 +239,4 @@ L(end):	mulx(	v0, %rax, w3)
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreihwl/aors_n.asm b/mpn/x86_64/coreihwl/aors_n.asm
index fc996277f..f9d89f768 100644
--- a/mpn/x86_64/coreihwl/aors_n.asm
+++ b/mpn/x86_64/coreihwl/aors_n.asm
@@ -259,3 +259,4 @@ L(tab):	JMPENT(	L(0), L(tab))
 	JMPENT(	L(5), L(tab))
 	JMPENT(	L(6), L(tab))
 	JMPENT(	L(7), L(tab))
+ASM_END()
diff --git a/mpn/x86_64/coreihwl/aorsmul_1.asm b/mpn/x86_64/coreihwl/aorsmul_1.asm
index 3f43afa78..d01c94103 100644
--- a/mpn/x86_64/coreihwl/aorsmul_1.asm
+++ b/mpn/x86_64/coreihwl/aorsmul_1.asm
@@ -199,3 +199,4 @@ L(ret):	pop	%r13
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreihwl/gcd_22.asm b/mpn/x86_64/coreihwl/gcd_22.asm
index b5863b60e..e41731ead 100644
--- a/mpn/x86_64/coreihwl/gcd_22.asm
+++ b/mpn/x86_64/coreihwl/gcd_22.asm
@@ -136,3 +136,4 @@ L(end):	mov	v0, %rax
 L(ret):	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreihwl/mul_2.asm b/mpn/x86_64/coreihwl/mul_2.asm
index f1f044f18..f48e5d848 100644
--- a/mpn/x86_64/coreihwl/mul_2.asm
+++ b/mpn/x86_64/coreihwl/mul_2.asm
@@ -174,3 +174,4 @@ L(end):	mulx(	v1, %rdx, %rax)
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreihwl/mul_basecase.asm b/mpn/x86_64/coreihwl/mul_basecase.asm
index b2656c8e9..14826e823 100644
--- a/mpn/x86_64/coreihwl/mul_basecase.asm
+++ b/mpn/x86_64/coreihwl/mul_basecase.asm
@@ -439,3 +439,4 @@ L(ret2):pop	%rbp
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreihwl/mullo_basecase.asm b/mpn/x86_64/coreihwl/mullo_basecase.asm
index e65559ba2..b29352cc1 100644
--- a/mpn/x86_64/coreihwl/mullo_basecase.asm
+++ b/mpn/x86_64/coreihwl/mullo_basecase.asm
@@ -420,3 +420,4 @@ L(n3):	mov	(vp), %r9
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreihwl/redc_1.asm b/mpn/x86_64/coreihwl/redc_1.asm
index b1d6c0a7d..3b09a73d1 100644
--- a/mpn/x86_64/coreihwl/redc_1.asm
+++ b/mpn/x86_64/coreihwl/redc_1.asm
@@ -435,3 +435,4 @@ L(ret):	pop	%r15
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreihwl/sqr_basecase.asm b/mpn/x86_64/coreihwl/sqr_basecase.asm
index 641cdf349..b6ea890c1 100644
--- a/mpn/x86_64/coreihwl/sqr_basecase.asm
+++ b/mpn/x86_64/coreihwl/sqr_basecase.asm
@@ -504,3 +504,4 @@ L(dend):adc	%rbx, %rdx
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreinhm/aorrlsh_n.asm b/mpn/x86_64/coreinhm/aorrlsh_n.asm
index eed64e701..3f25eea2b 100644
--- a/mpn/x86_64/coreinhm/aorrlsh_n.asm
+++ b/mpn/x86_64/coreinhm/aorrlsh_n.asm
@@ -198,3 +198,4 @@ IFDOS(`	mov	64(%rsp), %r9	')	C cy
 	sbb	R32(%rbx), R32(%rbx)	C initialise CF save register
 	jmp	L(ent)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreinhm/hamdist.asm b/mpn/x86_64/coreinhm/hamdist.asm
index a5a63e4b3..a84bcbc78 100644
--- a/mpn/x86_64/coreinhm/hamdist.asm
+++ b/mpn/x86_64/coreinhm/hamdist.asm
@@ -194,3 +194,4 @@ L(tab):	JMPENT(	L(0), L(tab))
 	JMPENT(	L(1), L(tab))
 	JMPENT(	L(2), L(tab))
 	JMPENT(	L(3), L(tab))
+ASM_END()
diff --git a/mpn/x86_64/coreinhm/popcount.asm b/mpn/x86_64/coreinhm/popcount.asm
index 0a3c867bb..24c4ebc84 100644
--- a/mpn/x86_64/coreinhm/popcount.asm
+++ b/mpn/x86_64/coreinhm/popcount.asm
@@ -180,3 +180,4 @@ L(tab):	JMPENT(	L(0), L(tab))
 	JMPENT(	L(5), L(tab))
 	JMPENT(	L(6), L(tab))
 	JMPENT(	L(7), L(tab))
+ASM_END()
diff --git a/mpn/x86_64/coreisbr/addmul_2.asm b/mpn/x86_64/coreisbr/addmul_2.asm
index 21f0bf465..45c7b15cb 100644
--- a/mpn/x86_64/coreisbr/addmul_2.asm
+++ b/mpn/x86_64/coreisbr/addmul_2.asm
@@ -222,3 +222,4 @@ L(end):	mul	v1
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreisbr/aorrlshC_n.asm b/mpn/x86_64/coreisbr/aorrlshC_n.asm
index 23ace4188..6af7da8ad 100644
--- a/mpn/x86_64/coreisbr/aorrlshC_n.asm
+++ b/mpn/x86_64/coreisbr/aorrlshC_n.asm
@@ -171,3 +171,4 @@ L(end):	shr	$RSH, %rbp
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreisbr/aorrlsh_n.asm b/mpn/x86_64/coreisbr/aorrlsh_n.asm
index db8ee6884..56ca4979f 100644
--- a/mpn/x86_64/coreisbr/aorrlsh_n.asm
+++ b/mpn/x86_64/coreisbr/aorrlsh_n.asm
@@ -213,3 +213,4 @@ IFDOS(`	mov	64(%rsp), %r9	')	C cy
 	sbb	R32(%rbx), R32(%rbx)	C initialise CF save register
 	jmp	L(ent)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreisbr/aors_n.asm b/mpn/x86_64/coreisbr/aors_n.asm
index 61fee3e36..d4662486b 100644
--- a/mpn/x86_64/coreisbr/aors_n.asm
+++ b/mpn/x86_64/coreisbr/aors_n.asm
@@ -201,3 +201,4 @@ PROLOGUE(func_nc)
 IFDOS(`	mov	56(%rsp), %r8	')
 	jmp	L(ent)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreisbr/cnd_add_n.asm b/mpn/x86_64/coreisbr/cnd_add_n.asm
index 43abcc861..3d72bf8da 100644
--- a/mpn/x86_64/coreisbr/cnd_add_n.asm
+++ b/mpn/x86_64/coreisbr/cnd_add_n.asm
@@ -172,3 +172,4 @@ L(end):	neg	R32(%rax)
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreisbr/cnd_sub_n.asm b/mpn/x86_64/coreisbr/cnd_sub_n.asm
index f55492b67..3371269f3 100644
--- a/mpn/x86_64/coreisbr/cnd_sub_n.asm
+++ b/mpn/x86_64/coreisbr/cnd_sub_n.asm
@@ -198,3 +198,4 @@ L(end):	neg	R32(%rax)
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreisbr/mul_1.asm b/mpn/x86_64/coreisbr/mul_1.asm
index a43a1174b..1f172935e 100644
--- a/mpn/x86_64/coreisbr/mul_1.asm
+++ b/mpn/x86_64/coreisbr/mul_1.asm
@@ -197,3 +197,4 @@ L(00c):	add	cin, %r10
 	mov	8(up,n,8), %rax
 	jmp	L(L0c)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreisbr/mul_2.asm b/mpn/x86_64/coreisbr/mul_2.asm
index 781534dba..10f1769a0 100644
--- a/mpn/x86_64/coreisbr/mul_2.asm
+++ b/mpn/x86_64/coreisbr/mul_2.asm
@@ -165,3 +165,4 @@ L(end):	mul	v0
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreisbr/mul_basecase.asm b/mpn/x86_64/coreisbr/mul_basecase.asm
index 35fd1cc00..d5c7e5b43 100644
--- a/mpn/x86_64/coreisbr/mul_basecase.asm
+++ b/mpn/x86_64/coreisbr/mul_basecase.asm
@@ -405,3 +405,4 @@ L(ret2):pop	%rbp
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreisbr/mullo_basecase.asm b/mpn/x86_64/coreisbr/mullo_basecase.asm
index a41a8acee..acf7776ac 100644
--- a/mpn/x86_64/coreisbr/mullo_basecase.asm
+++ b/mpn/x86_64/coreisbr/mullo_basecase.asm
@@ -382,3 +382,4 @@ L(n3):	mov	(vp_param), %r9
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreisbr/rsh1aors_n.asm b/mpn/x86_64/coreisbr/rsh1aors_n.asm
index fd2eaea7b..eefad99ae 100644
--- a/mpn/x86_64/coreisbr/rsh1aors_n.asm
+++ b/mpn/x86_64/coreisbr/rsh1aors_n.asm
@@ -191,3 +191,4 @@ L(end):	shrd	$1, %rbx, %rbp
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/coreisbr/sqr_basecase.asm b/mpn/x86_64/coreisbr/sqr_basecase.asm
index 46a36121f..1600e2552 100644
--- a/mpn/x86_64/coreisbr/sqr_basecase.asm
+++ b/mpn/x86_64/coreisbr/sqr_basecase.asm
@@ -482,3 +482,4 @@ L(dend):add	%r8, %r10
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/div_qr_1n_pi1.asm b/mpn/x86_64/div_qr_1n_pi1.asm
index b3d45e2c7..9fd26339c 100644
--- a/mpn/x86_64/div_qr_1n_pi1.asm
+++ b/mpn/x86_64/div_qr_1n_pi1.asm
@@ -245,3 +245,4 @@ L(q_incr_loop):
 	lea	8(U1), U1
 	jmp	L(q_incr_loop)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/div_qr_2n_pi1.asm b/mpn/x86_64/div_qr_2n_pi1.asm
index 5e59a0ac5..c189c33bb 100644
--- a/mpn/x86_64/div_qr_2n_pi1.asm
+++ b/mpn/x86_64/div_qr_2n_pi1.asm
@@ -156,3 +156,4 @@ L(fix):	C Unlikely update. u2 >= d1
 	sbb	d1, u2
 	jmp	L(bck)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/div_qr_2u_pi1.asm b/mpn/x86_64/div_qr_2u_pi1.asm
index 85af96fbf..f2ac526a5 100644
--- a/mpn/x86_64/div_qr_2u_pi1.asm
+++ b/mpn/x86_64/div_qr_2u_pi1.asm
@@ -198,3 +198,4 @@ L(fix_qh):	C Unlikely update. u2 >= d1
 	sbb	d1, u2
 	jmp	L(bck_qh)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/dive_1.asm b/mpn/x86_64/dive_1.asm
index 988bdab63..1929091b8 100644
--- a/mpn/x86_64/dive_1.asm
+++ b/mpn/x86_64/dive_1.asm
@@ -156,3 +156,4 @@ L(one):	shr	R8(%rcx), %rax
 	ret
 
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/divrem_1.asm b/mpn/x86_64/divrem_1.asm
index d4d61ad9d..edfd89351 100644
--- a/mpn/x86_64/divrem_1.asm
+++ b/mpn/x86_64/divrem_1.asm
@@ -312,3 +312,4 @@ L(ret):	pop	%rbx
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/divrem_2.asm b/mpn/x86_64/divrem_2.asm
index 20811ccbc..e10f3282f 100644
--- a/mpn/x86_64/divrem_2.asm
+++ b/mpn/x86_64/divrem_2.asm
@@ -190,3 +190,4 @@ L(fix):	seta	%dl
 	sbb	%r11, %rbx
 	jmp	L(bck)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/fastavx/copyd.asm b/mpn/x86_64/fastavx/copyd.asm
index 56d472f83..a69a62430 100644
--- a/mpn/x86_64/fastavx/copyd.asm
+++ b/mpn/x86_64/fastavx/copyd.asm
@@ -170,3 +170,4 @@ L(bc):	test	$4, R8(n)
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/fastavx/copyi.asm b/mpn/x86_64/fastavx/copyi.asm
index 760774797..f50aa4717 100644
--- a/mpn/x86_64/fastavx/copyi.asm
+++ b/mpn/x86_64/fastavx/copyi.asm
@@ -167,3 +167,4 @@ L(bc):	test	$4, R8(n)
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/fastsse/com-palignr.asm b/mpn/x86_64/fastsse/com-palignr.asm
index 69027bc28..50cd40fc6 100644
--- a/mpn/x86_64/fastsse/com-palignr.asm
+++ b/mpn/x86_64/fastsse/com-palignr.asm
@@ -309,3 +309,4 @@ L(end):	test	$1, R8(n)
 1:	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/fastsse/com.asm b/mpn/x86_64/fastsse/com.asm
index c86722289..aec7d2544 100644
--- a/mpn/x86_64/fastsse/com.asm
+++ b/mpn/x86_64/fastsse/com.asm
@@ -173,3 +173,4 @@ IFDOS(`	add	$56, %rsp	')
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/fastsse/copyd-palignr.asm b/mpn/x86_64/fastsse/copyd-palignr.asm
index fac6f8a83..fa1e4a4cf 100644
--- a/mpn/x86_64/fastsse/copyd-palignr.asm
+++ b/mpn/x86_64/fastsse/copyd-palignr.asm
@@ -252,3 +252,4 @@ L(end):	test	$1, R8(n)
 1:	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/fastsse/copyd.asm b/mpn/x86_64/fastsse/copyd.asm
index b3c47064d..ce820c5d1 100644
--- a/mpn/x86_64/fastsse/copyd.asm
+++ b/mpn/x86_64/fastsse/copyd.asm
@@ -164,3 +164,4 @@ L(sma):	test	$8, R8(n)
 L(don):	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/fastsse/copyi-palignr.asm b/mpn/x86_64/fastsse/copyi-palignr.asm
index 9876a4733..fb4655f1f 100644
--- a/mpn/x86_64/fastsse/copyi-palignr.asm
+++ b/mpn/x86_64/fastsse/copyi-palignr.asm
@@ -298,3 +298,4 @@ L(end):	test	$1, R8(n)
 1:	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/fastsse/copyi.asm b/mpn/x86_64/fastsse/copyi.asm
index 97f7865e6..826caadba 100644
--- a/mpn/x86_64/fastsse/copyi.asm
+++ b/mpn/x86_64/fastsse/copyi.asm
@@ -183,3 +183,4 @@ dnl	jnc	1b
 L(ret):	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/fastsse/lshift-movdqu2.asm b/mpn/x86_64/fastsse/lshift-movdqu2.asm
index a05e850a1..217f2cdef 100644
--- a/mpn/x86_64/fastsse/lshift-movdqu2.asm
+++ b/mpn/x86_64/fastsse/lshift-movdqu2.asm
@@ -180,3 +180,4 @@ L(end8):movq	(ap), %xmm0
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/fastsse/lshift.asm b/mpn/x86_64/fastsse/lshift.asm
index 6a17b9351..79a555424 100644
--- a/mpn/x86_64/fastsse/lshift.asm
+++ b/mpn/x86_64/fastsse/lshift.asm
@@ -171,3 +171,4 @@ L(end8):movq	(ap), %xmm0
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/fastsse/lshiftc-movdqu2.asm b/mpn/x86_64/fastsse/lshiftc-movdqu2.asm
index 8250910c5..9f144358b 100644
--- a/mpn/x86_64/fastsse/lshiftc-movdqu2.asm
+++ b/mpn/x86_64/fastsse/lshiftc-movdqu2.asm
@@ -191,3 +191,4 @@ L(end8):movq	(ap), %xmm0
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/fastsse/lshiftc.asm b/mpn/x86_64/fastsse/lshiftc.asm
index a616075f1..a6630cb49 100644
--- a/mpn/x86_64/fastsse/lshiftc.asm
+++ b/mpn/x86_64/fastsse/lshiftc.asm
@@ -181,3 +181,4 @@ L(end8):movq	(ap), %xmm0
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/fastsse/rshift-movdqu2.asm b/mpn/x86_64/fastsse/rshift-movdqu2.asm
index 1e270b13c..15bcc0271 100644
--- a/mpn/x86_64/fastsse/rshift-movdqu2.asm
+++ b/mpn/x86_64/fastsse/rshift-movdqu2.asm
@@ -199,3 +199,4 @@ L(bc):	dec	R32(n)
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/fastsse/sec_tabselect.asm b/mpn/x86_64/fastsse/sec_tabselect.asm
index e7b7febbe..f3b76ebb8 100644
--- a/mpn/x86_64/fastsse/sec_tabselect.asm
+++ b/mpn/x86_64/fastsse/sec_tabselect.asm
@@ -202,3 +202,4 @@ IFDOS(`	add	$88, %rsp	')
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/fat/fat_entry.asm b/mpn/x86_64/fat/fat_entry.asm
index 5f244ac2b..2322be825 100644
--- a/mpn/x86_64/fat/fat_entry.asm
+++ b/mpn/x86_64/fat/fat_entry.asm
@@ -207,3 +207,4 @@ PROLOGUE(__gmpn_cpuid)
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/gcd_11.asm b/mpn/x86_64/gcd_11.asm
index f9b3bcc96..1e5ac6833 100644
--- a/mpn/x86_64/gcd_11.asm
+++ b/mpn/x86_64/gcd_11.asm
@@ -112,3 +112,4 @@ L(shift_alot):
 	mov	u0, %rdx
 	jmp	L(mid)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/gcd_22.asm b/mpn/x86_64/gcd_22.asm
index 78f985f89..c3b0b8910 100644
--- a/mpn/x86_64/gcd_22.asm
+++ b/mpn/x86_64/gcd_22.asm
@@ -161,3 +161,4 @@ L(end):	C mov	v0, %rax
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/k10/gcd_22.asm b/mpn/x86_64/k10/gcd_22.asm
index f58b4cccf..c7fe66895 100644
--- a/mpn/x86_64/k10/gcd_22.asm
+++ b/mpn/x86_64/k10/gcd_22.asm
@@ -140,3 +140,4 @@ L(end):	C mov	v0, %rax
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/k10/hamdist.asm b/mpn/x86_64/k10/hamdist.asm
index f70494a33..d885e2d60 100644
--- a/mpn/x86_64/k10/hamdist.asm
+++ b/mpn/x86_64/k10/hamdist.asm
@@ -107,3 +107,4 @@ L(top):	mov	(ap,n,8), %r8
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/k10/popcount.asm b/mpn/x86_64/k10/popcount.asm
index 3814aeabf..735d25a30 100644
--- a/mpn/x86_64/k10/popcount.asm
+++ b/mpn/x86_64/k10/popcount.asm
@@ -136,3 +136,4 @@ C 1 = n mod 8
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/k8/addmul_2.asm b/mpn/x86_64/k8/addmul_2.asm
index 78bcba16a..38caa4d30 100644
--- a/mpn/x86_64/k8/addmul_2.asm
+++ b/mpn/x86_64/k8/addmul_2.asm
@@ -193,3 +193,4 @@ L(end):	xor	R32(w1), R32(w1)
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/k8/aorrlsh_n.asm b/mpn/x86_64/k8/aorrlsh_n.asm
index ff3a1842f..3ab7050b0 100644
--- a/mpn/x86_64/k8/aorrlsh_n.asm
+++ b/mpn/x86_64/k8/aorrlsh_n.asm
@@ -215,3 +215,4 @@ L(cj1):	mov	%r9, 8(rp,n,8)
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/k8/bdiv_q_1.asm b/mpn/x86_64/k8/bdiv_q_1.asm
index 1172b0d11..606d54f27 100644
--- a/mpn/x86_64/k8/bdiv_q_1.asm
+++ b/mpn/x86_64/k8/bdiv_q_1.asm
@@ -177,3 +177,4 @@ L(one):	shr	R8(%rcx), %rax
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/k8/div_qr_1n_pi1.asm b/mpn/x86_64/k8/div_qr_1n_pi1.asm
index 86de08cc8..e91b80923 100644
--- a/mpn/x86_64/k8/div_qr_1n_pi1.asm
+++ b/mpn/x86_64/k8/div_qr_1n_pi1.asm
@@ -247,3 +247,4 @@ L(q_incr_loop):
 	lea	8(U1), U1
 	jmp	L(q_incr_loop)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/k8/mul_basecase.asm b/mpn/x86_64/k8/mul_basecase.asm
index ca2efb9b2..8b114ce8b 100644
--- a/mpn/x86_64/k8/mul_basecase.asm
+++ b/mpn/x86_64/k8/mul_basecase.asm
@@ -467,3 +467,4 @@ L(ret):	pop	%r15
 	ret
 
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/k8/mullo_basecase.asm b/mpn/x86_64/k8/mullo_basecase.asm
index fa00f4234..fc6a4396d 100644
--- a/mpn/x86_64/k8/mullo_basecase.asm
+++ b/mpn/x86_64/k8/mullo_basecase.asm
@@ -434,3 +434,4 @@ L(ret):	pop	%r15
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/k8/mulmid_basecase.asm b/mpn/x86_64/k8/mulmid_basecase.asm
index 86f1414ed..d7d1f27c6 100644
--- a/mpn/x86_64/k8/mulmid_basecase.asm
+++ b/mpn/x86_64/k8/mulmid_basecase.asm
@@ -557,3 +557,4 @@ L(ret):	pop	%r15
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/k8/redc_1.asm b/mpn/x86_64/k8/redc_1.asm
index 9327b21b1..4cb65af49 100644
--- a/mpn/x86_64/k8/redc_1.asm
+++ b/mpn/x86_64/k8/redc_1.asm
@@ -589,3 +589,4 @@ L(ret):	pop	%r15
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/k8/sqr_basecase.asm b/mpn/x86_64/k8/sqr_basecase.asm
index 60cf945a4..f2c70b06b 100644
--- a/mpn/x86_64/k8/sqr_basecase.asm
+++ b/mpn/x86_64/k8/sqr_basecase.asm
@@ -805,3 +805,4 @@ L(d1):	mov	%r11, 24(rp,j,8)
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/logops_n.asm b/mpn/x86_64/logops_n.asm
index e25854d26..b3969ba97 100644
--- a/mpn/x86_64/logops_n.asm
+++ b/mpn/x86_64/logops_n.asm
@@ -258,3 +258,4 @@ L(ret):	FUNC_EXIT()
 	ret
 EPILOGUE()
 ')
+ASM_END()
diff --git a/mpn/x86_64/lshift.asm b/mpn/x86_64/lshift.asm
index fff31520d..4187bdcce 100644
--- a/mpn/x86_64/lshift.asm
+++ b/mpn/x86_64/lshift.asm
@@ -170,3 +170,4 @@ L(ast):	mov	(up), %r10
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/lshiftc.asm b/mpn/x86_64/lshiftc.asm
index c4ba04a17..f6fe4c9b6 100644
--- a/mpn/x86_64/lshiftc.asm
+++ b/mpn/x86_64/lshiftc.asm
@@ -180,3 +180,4 @@ L(ast):	mov	(up), %r10
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/lshsub_n.asm b/mpn/x86_64/lshsub_n.asm
index 4d428c0bd..62877d781 100644
--- a/mpn/x86_64/lshsub_n.asm
+++ b/mpn/x86_64/lshsub_n.asm
@@ -170,3 +170,4 @@ L(end):
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/missing.asm b/mpn/x86_64/missing.asm
index 9b65c89dd..22dac17f0 100644
--- a/mpn/x86_64/missing.asm
+++ b/mpn/x86_64/missing.asm
@@ -128,3 +128,4 @@ PROLOGUE(__gmp_adcx)
 	ret
 EPILOGUE()
 PROTECT(__gmp_adcx)
+ASM_END()
diff --git a/mpn/x86_64/mod_1_2.asm b/mpn/x86_64/mod_1_2.asm
index 40fcaebf4..fbaae3b3c 100644
--- a/mpn/x86_64/mod_1_2.asm
+++ b/mpn/x86_64/mod_1_2.asm
@@ -239,3 +239,4 @@ ifdef(`SHLD_SLOW',`
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/mod_1_4.asm b/mpn/x86_64/mod_1_4.asm
index 6cf304cf2..8969e42c6 100644
--- a/mpn/x86_64/mod_1_4.asm
+++ b/mpn/x86_64/mod_1_4.asm
@@ -270,3 +270,4 @@ ifdef(`SHLD_SLOW',`
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/mod_34lsub1.asm b/mpn/x86_64/mod_34lsub1.asm
index 75421a6ec..74f576a07 100644
--- a/mpn/x86_64/mod_34lsub1.asm
+++ b/mpn/x86_64/mod_34lsub1.asm
@@ -213,3 +213,4 @@ L(0):	add	%r9, %rax
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/mode1o.asm b/mpn/x86_64/mode1o.asm
index 2cd2b0884..3377435fc 100644
--- a/mpn/x86_64/mode1o.asm
+++ b/mpn/x86_64/mode1o.asm
@@ -169,3 +169,4 @@ L(one):
 
 EPILOGUE(mpn_modexact_1c_odd)
 EPILOGUE(mpn_modexact_1_odd)
+ASM_END()
diff --git a/mpn/x86_64/mul_1.asm b/mpn/x86_64/mul_1.asm
index e1ba89b04..44764dd51 100644
--- a/mpn/x86_64/mul_1.asm
+++ b/mpn/x86_64/mul_1.asm
@@ -190,3 +190,4 @@ IFDOS(``pop	%rdi		'')
 IFDOS(``pop	%rsi		'')
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/mul_2.asm b/mpn/x86_64/mul_2.asm
index d64313b32..b6c6bf191 100644
--- a/mpn/x86_64/mul_2.asm
+++ b/mpn/x86_64/mul_2.asm
@@ -202,3 +202,4 @@ L(m22):	mul	v1
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/nano/dive_1.asm b/mpn/x86_64/nano/dive_1.asm
index e9a07631c..aead4d551 100644
--- a/mpn/x86_64/nano/dive_1.asm
+++ b/mpn/x86_64/nano/dive_1.asm
@@ -164,3 +164,4 @@ L(one):	shr	R8(%rcx), %rax
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/pentium4/aors_n.asm b/mpn/x86_64/pentium4/aors_n.asm
index 8e6ee1bae..3751e381d 100644
--- a/mpn/x86_64/pentium4/aors_n.asm
+++ b/mpn/x86_64/pentium4/aors_n.asm
@@ -194,3 +194,4 @@ L(ret):	mov	R32(%rbx), R32(%rax)
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/pentium4/mod_34lsub1.asm b/mpn/x86_64/pentium4/mod_34lsub1.asm
index f34b3f079..bf83f6278 100644
--- a/mpn/x86_64/pentium4/mod_34lsub1.asm
+++ b/mpn/x86_64/pentium4/mod_34lsub1.asm
@@ -165,3 +165,4 @@ L(combine):
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/pentium4/rsh1aors_n.asm b/mpn/x86_64/pentium4/rsh1aors_n.asm
index 5528ce47d..219a809cf 100644
--- a/mpn/x86_64/pentium4/rsh1aors_n.asm
+++ b/mpn/x86_64/pentium4/rsh1aors_n.asm
@@ -332,3 +332,4 @@ L(cj1):	or	%r14, %rbx
 L(c3):	mov	$1, R8(%rax)
 	jmp	L(rc3)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/pentium4/rshift.asm b/mpn/x86_64/pentium4/rshift.asm
index b7c1ee2cd..848045f46 100644
--- a/mpn/x86_64/pentium4/rshift.asm
+++ b/mpn/x86_64/pentium4/rshift.asm
@@ -167,3 +167,4 @@ L(ast):	movq	(up), %mm2
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/popham.asm b/mpn/x86_64/popham.asm
index 3a29b2e66..b7ceb177f 100644
--- a/mpn/x86_64/popham.asm
+++ b/mpn/x86_64/popham.asm
@@ -161,3 +161,4 @@ L(end):
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/rsh1aors_n.asm b/mpn/x86_64/rsh1aors_n.asm
index a3e9cc5d2..797e2507a 100644
--- a/mpn/x86_64/rsh1aors_n.asm
+++ b/mpn/x86_64/rsh1aors_n.asm
@@ -187,3 +187,4 @@ L(end):	mov	%rbx, (rp)
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/rshift.asm b/mpn/x86_64/rshift.asm
index 3f344f1df..0fc58775b 100644
--- a/mpn/x86_64/rshift.asm
+++ b/mpn/x86_64/rshift.asm
@@ -174,3 +174,4 @@ L(ast):	mov	(up), %r10
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/sec_tabselect.asm b/mpn/x86_64/sec_tabselect.asm
index e8aed261e..5dce3c1c0 100644
--- a/mpn/x86_64/sec_tabselect.asm
+++ b/mpn/x86_64/sec_tabselect.asm
@@ -174,3 +174,4 @@ L(b00):	pop	%r15
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/sqr_diag_addlsh1.asm b/mpn/x86_64/sqr_diag_addlsh1.asm
index f48612507..a1d876782 100644
--- a/mpn/x86_64/sqr_diag_addlsh1.asm
+++ b/mpn/x86_64/sqr_diag_addlsh1.asm
@@ -114,3 +114,4 @@ L(end):	add	%r10, %r8
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/sublsh1_n.asm b/mpn/x86_64/sublsh1_n.asm
index c6d829fcb..c18f32a9d 100644
--- a/mpn/x86_64/sublsh1_n.asm
+++ b/mpn/x86_64/sublsh1_n.asm
@@ -158,3 +158,4 @@ L(end):	add	R32(%rbp), R32(%rax)
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/zen/aorrlsh_n.asm b/mpn/x86_64/zen/aorrlsh_n.asm
index e049b2f53..e27b564fe 100644
--- a/mpn/x86_64/zen/aorrlsh_n.asm
+++ b/mpn/x86_64/zen/aorrlsh_n.asm
@@ -224,3 +224,4 @@ L(tab):	JMPENT(	L(0), L(tab))
 	JMPENT(	L(5), L(tab))
 	JMPENT(	L(6), L(tab))
 	JMPENT(	L(7), L(tab))
+ASM_END()
diff --git a/mpn/x86_64/zen/mul_basecase.asm b/mpn/x86_64/zen/mul_basecase.asm
index affa3b69c..c70d548ea 100644
--- a/mpn/x86_64/zen/mul_basecase.asm
+++ b/mpn/x86_64/zen/mul_basecase.asm
@@ -453,3 +453,4 @@ L(wd3):	adc	%r11, 8(rp)
 	jne	L(3)
 	jmp	L(end)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/zen/mullo_basecase.asm b/mpn/x86_64/zen/mullo_basecase.asm
index 2ae729a4b..c0816981a 100644
--- a/mpn/x86_64/zen/mullo_basecase.asm
+++ b/mpn/x86_64/zen/mullo_basecase.asm
@@ -297,3 +297,4 @@ L(lo0):	.byte	0xc4,0xe2,0xe3,0xf6,0x44,0xce,0x18	C mulx 24(up,n,8), %rbx, %rax
 	inc	%r14
 	jmp	L(outer)
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/zen/sbpi1_bdiv_r.asm b/mpn/x86_64/zen/sbpi1_bdiv_r.asm
index f6e8f9ce1..277b3c3f1 100644
--- a/mpn/x86_64/zen/sbpi1_bdiv_r.asm
+++ b/mpn/x86_64/zen/sbpi1_bdiv_r.asm
@@ -505,3 +505,4 @@ L(ret):	mov	%rbp, %rax
 	pop	%r15
 	ret
 EPILOGUE()
+ASM_END()
diff --git a/mpn/x86_64/zen/sqr_basecase.asm b/mpn/x86_64/zen/sqr_basecase.asm
index a7c612763..d185debcd 100644
--- a/mpn/x86_64/zen/sqr_basecase.asm
+++ b/mpn/x86_64/zen/sqr_basecase.asm
@@ -480,3 +480,4 @@ C	pop	%r14
 	FUNC_EXIT()
 	ret
 EPILOGUE()
+ASM_END()
-- 
2.27.0

